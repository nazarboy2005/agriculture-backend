# Production Configuration for Smart Irrigation Backend

# Application Configuration
spring.application.name=agriculture-backend
spring.profiles.active=prod

# Server Configuration
server.port=${PORT:9090}
server.servlet.context-path=/api

# Database Configuration - Railway PostgreSQL
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://aws-1-eu-north-1.pooler.supabase.com:6543/postgres?sslmode=require&prepareThreshold=0}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:postgres.hlhnquynjylsxojferjc}
spring.datasource.password=${DB_PASSWORD:Nazarboy2005}

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# External API Configuration
app.weather.api.key=${WEATHER_API_KEY}
app.weather.api.url=https://api.openweathermap.org/data/2.5/onecall
app.nasa.api.url=https://power.larc.nasa.gov/api/temporal/daily/point

# Twilio Configuration - Commented out for now, will be added later
# app.twilio.account.sid=${TWILIO_ACCOUNT_SID}
# app.twilio.auth.token=${TWILIO_AUTH_TOKEN}
# app.twilio.phone.number=${TWILIO_PHONE_NUMBER}

# Scheduler Configuration
app.scheduler.daily-recommendation.cron=0 0 6 * * ?
app.scheduler.enabled=true

# Logging Configuration
logging.level.com.hackathon.agriculture_backend=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=${ADMIN_PASSWORD:admin123}
spring.security.user.roles=ADMIN

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:1077945709935-l5tcsn6el2b1rqh51l229aja2klio170.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:https://your-frontend-domain.vercel.app/auth/callback/google}

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:killiyaezov@gmail.com}
spring.mail.password=${MAIL_PASSWORD:wmyahtxvziwqsdly}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Application Email Configuration
app.email.from=${MAIL_USERNAME:killiyaezov@gmail.com}
app.frontend.url=${FRONTEND_URL:https://your-frontend-domain.vercel.app}
app.token.email-confirmation.expiry=24
app.token.password-reset.expiry=1

# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=86400000

# Gemini AI Configuration
app.gemini.api.key=${GEMINI_API_KEY}
app.gemini.model.name=gemini-1.5-flash
app.gemini.max.tokens=8192
app.gemini.temperature=0.7
